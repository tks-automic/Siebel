<?xml version="1.0" encoding="ISO-8859-15" standalone="no"?><uc-export clientvers="8.0.0">
<JOBS_UNIX AttrType="UNIX" name="PCK.AUTOMIC_SIEBEL.PRV.JOB.STOP_COMPONENT@UNIX">
<XHEADER state="1">
<Title/>


<LastUsed/>
<ArchiveKey1/>
<ArchiveKey2/>
<ExtRepDef>1</ExtRepDef>
<ExtRepAll>0</ExtRepAll>
<ExtRepNone>0</ExtRepNone>
<Active>1</Active>
<OH_SubType/>
</XHEADER>
<OUTPUTREG state="1" tidy="1">
<FileReg/>
</OUTPUTREG>
<SYNCREF state="1">
<Syncs/>
</SYNCREF>
<ATTR_JOBS state="1">
<Queue>CLIENT_QUEUE</Queue>
<StartType/>
<HostDst>UNIX|&lt;UNIX&gt;|HOST</HostDst>
<HostATTR_Type>UNIX</HostATTR_Type>
<CodeName/>
<Login/>
<IntAccount/>
<AutoDeactNo>0</AutoDeactNo>
<AutoDeact1ErrorFree>0</AutoDeact1ErrorFree>
<AutoDeactErrorFree>0</AutoDeactErrorFree>
<DeactWhen/>
<DeactDelay>0</DeactDelay>
<AutoDeactAlways>1</AutoDeactAlways>
<AttDialog>0</AttDialog>
<ActAtRun>0</ActAtRun>
<Consumption>0</Consumption>
<UC4Priority>0</UC4Priority>
<MaxParallel2>0</MaxParallel2>
<MpElse1>1</MpElse1>
<MpElse2>0</MpElse2>
<TZ/>
</ATTR_JOBS>
<ATTR_UNIX state="1">
<OutputDb>1</OutputDb>
<OutputDbErr>0</OutputDbErr>
<OutputFile>0</OutputFile>
<ShellScript>1</ShellScript>
<Command>0</Command>
<Priority>0</Priority>
<Shell/>
<ShellOptions/>
<Com/>
</ATTR_UNIX>
<RUNTIME state="1">
<MaxRetCode>0</MaxRetCode>
<MrcExecute/>
<MrcElseE>0</MrcElseE>
<FcstStatus>0| </FcstStatus>
<Ert>9</Ert>
<ErtMethodDef>1</ErtMethodDef>
<ErtMethodFix>0</ErtMethodFix>
<ErtFix>0</ErtFix>
<ErtDynMethod>2|Average</ErtDynMethod>
<ErtMethodDyn>0</ErtMethodDyn>
<ErtCnt>0</ErtCnt>
<ErtCorr>0</ErtCorr>
<ErtIgn>0</ErtIgn>
<ErtIgnFlg>0</ErtIgnFlg>
<ErtMinCnt>0</ErtMinCnt>
<MrtMethodNone>1</MrtMethodNone>
<MrtMethodFix>0</MrtMethodFix>
<MrtFix>0</MrtFix>
<MrtMethodErt>0</MrtMethodErt>
<MrtErt>0</MrtErt>
<MrtMethodDate>0</MrtMethodDate>
<MrtDays>0</MrtDays>
<MrtTime>00:00</MrtTime>
<MrtTZ/>
<SrtMethodNone>1</SrtMethodNone>
<SrtMethodFix>0</SrtMethodFix>
<SrtFix>0</SrtFix>
<SrtMethodErt>0</SrtMethodErt>
<SrtErt>0</SrtErt>
<MrtCancel>0</MrtCancel>
<MrtExecute>0</MrtExecute>
<MrtExecuteObj/>
</RUNTIME>
<DYNVALUES state="1">
<dyntree>
<node content="1" id="VALUE" name="Variables" parent="" type="VALUE">
<VALUE state="1">
<Values/>
<Mode>0</Mode>
</VALUE>
</node>
</dyntree>
</DYNVALUES>
<ROLLBACK state="1" tidy="1">
<RollbackFlag>0</RollbackFlag>
<CBackupObj/>
<CRollbackObj/>
<FBackupPath/>
<FDeleteBefore>0</FDeleteBefore>
<FInclSubDirs>0</FInclSubDirs>
</ROLLBACK>
<PRE_SCRIPT mode="1" replacementmode="1" state="1" tidy="0">
<PSCRI><![CDATA[:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.START_STOP_JOB_ACCORDING_TO_AGENT_OS

:SET &PROMPTSET# = "PCK.AUTOMIC_SIEBEL.PRV.PROMPTSET.STOP_COMPONENT"
:INC PCK.AUTOMIC_SIEBEL.PRV.INCLUDE.GET_VALUES_FROM_CONFIG
]]></PSCRI>
</PRE_SCRIPT>
<SCRIPT mode="1" state="1" tidy="0">
<MSCRI><![CDATA[:DEFINE &STRING_ARR#, string, 30
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_HEADER_PARAM_VALIDATION

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Server Root Directory"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_SERVER_ROOT#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Gateway Server Address"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_GATEWAY_SERVER#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Server Administrator Username"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_USERNAME#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Enterprise Name"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_ENTRPR_SERVER#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Server"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_SERVER#

:SET &UC4RB_LOGGING_PARAMETER# = "Object managers"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_OBJECT_MANAGERS#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Environment Script directory"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_ENV_SCRIPT_DIR#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Environment Script file name"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_ENV_SCRIPT#

:SET &UC4RB_SIEBEL_ENV_SCRIPT_PATH# = "&UC4RB_SIEBEL_ENV_SCRIPT_DIR#/&UC4RB_SIEBEL_ENV_SCRIPT#"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.SUDOERS_HEADER
error=0

! Validate siebel environment script
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_UNIX_SHELL_FILE_EXISTS "&UC4RB_CHECKME#" = "&UC4RB_SIEBEL_ENV_SCRIPT_PATH#"
if [ "$ISFILE" -eq "0" ] ; then
  echo "ERROR[Siebel Environment Script file]: &UC4RB_SIEBEL_ENV_SCRIPT_PATH# is not a valid file"
  error=1
fi

! Validate siebel server root
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_UNIX_SHELL_FILE_EXISTS "&UC4RB_CHECKME#" = "&UC4RB_SIEBEL_SERVER_ROOT#"
if [ "$ISDIR" -eq "0" ] ; then
  echo "ERROR[Siebel Server root]: &UC4RB_SIEBEL_SERVER_ROOT# is not a valid directory"
  error=2
fi

if [ "$error" -gt "0" ] ; then
  exit $error
fi

:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_HEADER_EXECUTION

source "&UC4RB_SIEBEL_ENV_SCRIPT_PATH#"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_UNIX_SHELL

cd "&UC4RB_SIEBEL_SERVER_ROOT#/bin"

:SET &UC4RB_ENCRYPTED_PASSWORD_TMP#="&UC4RB_SIEBEL_PASSWORD#"
:INCLUDE PCK.AUTOMIC_SHARED.PUB.INCLUDE.DECRYPT_PASSWORD
:SET &COMMAND# = './srvrmgr /g "&UC4RB_SIEBEL_GATEWAY_SERVER#" /u "&UC4RB_SIEBEL_USERNAME#" /p $UC4_DECRYPTED_PWD /s "&UC4RB_SIEBEL_SERVER#"'
:IF &UC4RB_SIEBEL_ENTRPR_SERVER# NE ""
:  SET &COMMAND# = STR_CAT(&COMMAND#, ' /e "&UC4RB_SIEBEL_ENTRPR_SERVER#"')
:ENDIF

output=`&COMMAND# /c "list appserver &UC4RB_SIEBEL_SERVER# show SBLSRVR_NAME,SBLSRVR_STATE"`

!Check if appserver exists
echo "Checking server &UC4RB_SIEBEL_SERVER# state ..."

echo "$output" | grep "^&UC4RB_SIEBEL_SERVER#"
RC=$?
if [ "$RC" -gt "0" ] ; then
    echo "$output"
    exit $RC;
fi

:IF &UC4RB_SIEBEL_OBJECT_MANAGERS# EQ ""
   echo "$output" | grep "^&UC4RB_SIEBEL_SERVER#" | grep Shutdown > /dev/null
   RC=$?
   if [ "$RC" -gt "0" ] ; then
     echo "Server &UC4RB_SIEBEL_SERVER# is running. Shutting down ..."
     output=`&COMMAND# /c "shutdown appserver &UC4RB_SIEBEL_SERVER#" 2>&1`
     echo "$output"
     echo "$output" | grep "^SBL-" > /dev/null
     if [ "$?" -eq "0" ] ; then
       exit 1
     fi
   fi

:ELSE
   output=`&COMMAND# /c "list components show CC_ALIAS,CP_DISP_RUN_STATE"`

:  DEFINE &ARRAY#, string, 20
:  FILL &ARRAY#[] = STR_SPLIT(&UC4RB_SIEBEL_OBJECT_MANAGERS#, ",")
:  SET &VAR# = 1
:  SET &LEN# = LENGTH(&ARRAY#[], SIZE)
:  WHILE &VAR# LE &LEN#
:    SET &COMP# = STR_TRIM(&ARRAY#[&VAR#])
     echo "Checking component &COMP# state ..."

!    Check if component exists
     echo "$output" | grep "^&COMP#"
     RC=$?
     if [ "$RC" -gt "0" ] ; then
       echo "Component &COMP# does not exist in server &UC4RB_SIEBEL_SERVER#. Exiting ..."
       exit 1
     fi

!    Check if component is already running
     echo "$output" | grep "^&COMP#" | grep Shutdown > /dev/null
     RC=$?
     if [ "$RC" -eq "0" ] ; then
       echo "Component &COMP# already shutdown. Skipping ..."
     else
       echo "shutdown component &COMP#" >> "&TEMP#"
     fi
:    SET &VAR# = &VAR# + 1
:  ENDWHILE

   if [ -f "&TEMP#" ] ; then
     echo
     output=`&COMMAND#  /b /i "&TEMP#" 2>&1`
     rm "&TEMP#"
     echo "$output" | grep "^SBL-"
     RC=$?
     if [ "$RC" -eq "0" ] ; then
       exit 1
     fi
   fi

:ENDIF

! supply sudo
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.SUDOERS_FOOTER

]]></MSCRI>
</SCRIPT>
<OUTPUTSCAN state="1">
<Inherit>N</Inherit>
<filterobjects/>
<HostFsc/>
<LoginFsc/>
</OUTPUTSCAN>
<POST_SCRIPT mode="1" replacementmode="1" state="1" tidy="1">
<OSCRI/>
</POST_SCRIPT>
<DOCU_Docu state="1" type="text">
<DOC/>
</DOCU_Docu>
</JOBS_UNIX>
</uc-export>