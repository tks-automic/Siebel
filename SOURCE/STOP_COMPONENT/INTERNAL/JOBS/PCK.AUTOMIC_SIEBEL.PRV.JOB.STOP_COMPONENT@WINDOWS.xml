<?xml version="1.0" encoding="ISO-8859-15" standalone="no"?><uc-export clientvers="8.0.0">
<JOBS_WINDOWS AttrType="WINDOWS" name="PCK.AUTOMIC_SIEBEL.PRV.JOB.STOP_COMPONENT@WINDOWS">
<XHEADER state="1">
<Title/>


<LastUsed/>
<ArchiveKey1/>
<ArchiveKey2/>
<ExtRepDef>1</ExtRepDef>
<ExtRepAll>0</ExtRepAll>
<ExtRepNone>0</ExtRepNone>
<Active>1</Active>
<OH_SubType/>
</XHEADER>
<OUTPUTREG state="1" tidy="1">
<FileReg/>
</OUTPUTREG>
<SYNCREF state="1">
<Syncs/>
</SYNCREF>
<ATTR_JOBS state="1">
<Queue>CLIENT_QUEUE</Queue>
<StartType/>
<HostDst>WINDOWS|&lt;WIN&gt;|HOST</HostDst>
<HostATTR_Type>WINDOWS</HostATTR_Type>
<CodeName/>
<Login/>
<IntAccount/>
<AutoDeactNo>1</AutoDeactNo>
<AutoDeact1ErrorFree>0</AutoDeact1ErrorFree>
<AutoDeactErrorFree>0</AutoDeactErrorFree>
<DeactWhen/>
<DeactDelay>0</DeactDelay>
<AutoDeactAlways>0</AutoDeactAlways>
<AttDialog>0</AttDialog>
<ActAtRun>0</ActAtRun>
<Consumption>0</Consumption>
<UC4Priority>0</UC4Priority>
<MaxParallel2>0</MaxParallel2>
<MpElse1>1</MpElse1>
<MpElse2>0</MpElse2>
<TZ/>
</ATTR_JOBS>
<ATTR_WINDOWS state="1">
<OutputDb>1</OutputDb>
<OutputDbErr>0</OutputDbErr>
<OutputFile>0</OutputFile>
<IsGenerated>0</IsGenerated>
<BAT>1</BAT>
<COM>0</COM>
<WinBatch>0</WinBatch>
<Standard>1</Standard>
<Minimized>0</Minimized>
<Maximized>0</Maximized>
<JObjDefault>1</JObjDefault>
<JObjYes>0</JObjYes>
<JObjNo>0</JObjNo>
<WorkingDirectory>c:\</WorkingDirectory>
<Command/>
<LogOn>0</LogOn>
<ShowJob>0</ShowJob>
</ATTR_WINDOWS>
<RUNTIME state="1">
<MaxRetCode>0</MaxRetCode>
<MrcExecute/>
<MrcElseE>0</MrcElseE>
<FcstStatus>0| </FcstStatus>
<Ert>10</Ert>
<ErtMethodDef>1</ErtMethodDef>
<ErtMethodFix>0</ErtMethodFix>
<ErtFix>0</ErtFix>
<ErtDynMethod>2|Average</ErtDynMethod>
<ErtMethodDyn>0</ErtMethodDyn>
<ErtCnt>0</ErtCnt>
<ErtCorr>0</ErtCorr>
<ErtIgn>0</ErtIgn>
<ErtIgnFlg>0</ErtIgnFlg>
<ErtMinCnt>0</ErtMinCnt>
<MrtMethodNone>1</MrtMethodNone>
<MrtMethodFix>0</MrtMethodFix>
<MrtFix>0</MrtFix>
<MrtMethodErt>0</MrtMethodErt>
<MrtErt>0</MrtErt>
<MrtMethodDate>0</MrtMethodDate>
<MrtDays>0</MrtDays>
<MrtTime>00:00</MrtTime>
<MrtTZ/>
<SrtMethodNone>1</SrtMethodNone>
<SrtMethodFix>0</SrtMethodFix>
<SrtFix>0</SrtFix>
<SrtMethodErt>0</SrtMethodErt>
<SrtErt>0</SrtErt>
<MrtCancel>0</MrtCancel>
<MrtExecute>0</MrtExecute>
<MrtExecuteObj/>
</RUNTIME>
<DYNVALUES state="1">
<dyntree>
<node content="1" id="VALUE" name="Variables" parent="" type="VALUE">
<VALUE state="1">
<Values/>
<Mode>0</Mode>
</VALUE>
</node>
</dyntree>
</DYNVALUES>
<ROLLBACK state="1" tidy="1">
<RollbackFlag>0</RollbackFlag>
<CBackupObj/>
<CRollbackObj/>
<FBackupPath/>
<FDeleteBefore>0</FDeleteBefore>
<FInclSubDirs>0</FInclSubDirs>
</ROLLBACK>
<PRE_SCRIPT mode="1" replacementmode="1" state="1" tidy="0">
<PSCRI><![CDATA[:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.START_STOP_JOB_ACCORDING_TO_AGENT_OS

:SET &PROMPTSET# = "PCK.AUTOMIC_SIEBEL.PRV.PROMPTSET.STOP_COMPONENT"
:INC PCK.AUTOMIC_SIEBEL.PRV.INCLUDE.GET_VALUES_FROM_CONFIG
]]></PSCRI>
</PRE_SCRIPT>
<SCRIPT mode="1" state="1" tidy="0">
<MSCRI><![CDATA[@echo off

:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_HEADER_PARAM_VALIDATION

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Server Root Directory"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_SERVER_ROOT#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Gateway Server Address"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_GATEWAY_SERVER#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Server Administrator Username"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_USERNAME#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Enterprise Name"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_ENTRPR_SERVER#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Server"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_SERVER#

:SET &UC4RB_LOGGING_PARAMETER# = "Object managers"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_OBJECT_MANAGERS#

set /a errors=0 > nul

! Check if server root directory exists
:SET &UC4RB_CHECKME# = &UC4RB_SIEBEL_SERVER_ROOT#
:INCLUDE PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_WINDOWS_CONSOLE_FILE_EXISTS

if %EXIST% == 0 (
:  SET &UC4RB_LOGGING_PARAMETER# = "Siebel server root directory"
:  SET &UC4RB_LOGGING_ERROR# = "Directory &UC4RB_SIEBEL_SERVER_ROOT# does not exist"
:  INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_ERROR_PARAMETER
   set /a errors=1 > nul
)

if %ISDIR% == 0 (
:  SET &UC4RB_LOGGING_PARAMETER# = "Siebel server root directory"
:  SET &UC4RB_LOGGING_ERROR# = "&UC4RB_SIEBEL_SERVER_ROOT# is not a directory "
:  INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_ERROR_PARAMETER
   set /a errors=2 > nul
)

if %errors% GTR 0 (
  set retcode=%errors%
  goto :retcode
)

! Prepare temp directory
:SET &UC4RB_TEMP_DIRECTORY# = ""
:INC PCK.AUTOMIC_SHARED.PRV.INCLUDE.DISCOVER_TEMP_DIRECTORY.WINDOWS
:SET &TEMP# = &UC4RB_TEMP_DIRECTORY#\temp_&$RUNID#.txt

!***********************************************************************
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_HEADER_EXECUTION

cd /d "&UC4RB_SIEBEL_SERVER_ROOT#\BIN"

:SET &UC4RB_ENCRYPTED_PASSWORD_TMP#="&UC4RB_SIEBEL_PASSWORD#"
:INCLUDE PCK.AUTOMIC_SHARED.PUB.INCLUDE.DECRYPT_PASSWORD
:SET &COMMAND# = '.\srvrmgr /g "&UC4RB_SIEBEL_GATEWAY_SERVER#" /u "&UC4RB_SIEBEL_USERNAME#" /p %UC4_DECRYPTED_PWD% /s "&UC4RB_SIEBEL_SERVER#"'
:IF &UC4RB_SIEBEL_ENTRPR_SERVER# NE ""
:  SET &COMMAND# = STR_CAT(&COMMAND#, ' /e "&UC4RB_SIEBEL_ENTRPR_SERVER#"')
:ENDIF

&COMMAND# /c "list appserver &UC4RB_SIEBEL_SERVER# show SBLSRVR_NAME,SBLSRVR_STATE" > "&TEMP#" 2>&1

!Check if appserver exists
echo Checking server &UC4RB_SIEBEL_SERVER# state ...

type "&TEMP#" | findstr /B &UC4RB_SIEBEL_SERVER#
set retcode=%errorlevel%
if not %retcode% == 0 (
  type "&TEMP#"
  del "&TEMP#"
  goto :retcode
)

echo.
:IF &UC4RB_SIEBEL_OBJECT_MANAGERS# EQ ""
!  Check if appserver already shutdown. Stop appserver otherwise
   type "&TEMP#" | findstr /B &UC4RB_SIEBEL_SERVER# | findstr " Shutdown" > nul
   set retcode=%errorlevel%
   set stop_ok=1
   if not %retcode% == 0 (
     echo Server &UC4RB_SIEBEL_SERVER# is NOT shutdown. Shutting down ...
     &COMMAND# /c "shutdown appserver &UC4RB_SIEBEL_SERVER#" 2> "&TEMP#"
     type "&TEMP#" | findstr /B "SBL-"
     set stop_ok=%errorlevel%
   )

!  Check for errors when stopping appserver
   if %stop_ok% == 0 (
     set retcode = 1
     del "&TEMP#"
     goto :retcode
   )
:ELSE
   &COMMAND# /c "list components show CC_ALIAS,CP_DISP_RUN_STATE" > "&TEMP#"

:  DEFINE &ARRAY#, string, 20
:  FILL &ARRAY#[] = STR_SPLIT(&UC4RB_SIEBEL_OBJECT_MANAGERS#, ",")
:  SET &VAR# = 1
:  SET &LEN# = LENGTH(&ARRAY#[], SIZE)
:  WHILE &VAR# LE &LEN#
:    SET &COMP# = STR_TRIM(&ARRAY#[&VAR#])
     echo Checking component &COMP# state ...
!    Check if component exists
     type "&TEMP#" | findstr /B &COMP#
     set retcode=%errorlevel%
     if not %errorlevel% == 0 (
       echo Component &COMP# does not exist in server &UC4RB_SIEBEL_SERVER#. Exiting ...
       del "&TEMP#"
       goto :retcode
     )
!    Check if component is already running
     type "&TEMP#" | findstr &COMP# | findstr " Shutdown" > nul
     if %errorlevel% == 0 (
       echo Component &COMP# already shutdown. Skipping ...
     ) else (
       echo shutdown component &COMP# >> "&TEMP#_"
     )
:    SET &VAR# = &VAR# + 1
:  ENDWHILE

   echo.
   set stop_ok=1
   if exist "&TEMP#_" (
     &COMMAND#  /b /i "&TEMP#_" 2> "&TEMP#"
     del "&TEMP#_"
     type "&TEMP#" | findstr /B "SBL-"
     set stop_ok=%errorlevel%
   )
   if %stop_ok% == 0 (
     set retcode = 1
     del "&TEMP#"
     goto :retcode
  )
:ENDIF

del "&TEMP#"

]]></MSCRI>
</SCRIPT>
<OUTPUTSCAN state="1">
<Inherit>N</Inherit>
<filterobjects/>
<HostFsc/>
<LoginFsc/>
</OUTPUTSCAN>
<POST_SCRIPT mode="1" replacementmode="1" state="1" tidy="0">
<OSCRI><![CDATA[:SET &HND# = PREP_PROCESS_REPORT(, , "REP", "*")
:PROCESS &HND#
:  SET &output_line# = GET_PROCESS_LINE(&HND#, 1)

:  SET &POS#=STR_FIND(&output_line#, "Error (")
:  IF &POS# GT 0
:    MODIFY_STATE RETCODE = 1
:  ENDIF

:  SET &POS#=STR_FIND(&output_line#, "SBL-")
:  IF &POS# GT 0
:    MODIFY_STATE RETCODE = 1
:  ENDIF

:ENDPROCESS]]></OSCRI>
</POST_SCRIPT>
<DOCU_Docu state="1" type="text">
<DOC/>
</DOCU_Docu>
</JOBS_WINDOWS>
</uc-export>