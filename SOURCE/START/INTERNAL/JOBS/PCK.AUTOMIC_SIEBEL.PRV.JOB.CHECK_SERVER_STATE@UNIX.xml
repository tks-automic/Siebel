<?xml version="1.0" encoding="ISO-8859-15" standalone="no"?><uc-export clientvers="8.0.0">
<JOBS_UNIX AttrType="UNIX" name="PCK.AUTOMIC_SIEBEL.PRV.JOB.CHECK_SERVER_STATE@UNIX">
<XHEADER state="1">
<Title/>


<LastUsed/>
<ArchiveKey1/>
<ArchiveKey2/>
<ExtRepDef>1</ExtRepDef>
<ExtRepAll>0</ExtRepAll>
<ExtRepNone>0</ExtRepNone>
<Active>1</Active>
<OH_SubType/>
</XHEADER>
<OUTPUTREG state="1" tidy="1">
<FileReg/>
</OUTPUTREG>
<SYNCREF state="1">
<Syncs/>
</SYNCREF>
<ATTR_JOBS state="1">
<Queue>CLIENT_QUEUE</Queue>
<StartType/>
<HostDst>UNIX|&lt;UNIX&gt;|HOST</HostDst>
<HostATTR_Type>UNIX</HostATTR_Type>
<CodeName/>
<Login/>
<IntAccount/>
<AutoDeactNo>0</AutoDeactNo>
<AutoDeact1ErrorFree>0</AutoDeact1ErrorFree>
<AutoDeactErrorFree>0</AutoDeactErrorFree>
<DeactWhen/>
<DeactDelay>0</DeactDelay>
<AutoDeactAlways>1</AutoDeactAlways>
<AttDialog>0</AttDialog>
<ActAtRun>0</ActAtRun>
<Consumption>0</Consumption>
<UC4Priority>0</UC4Priority>
<MaxParallel2>0</MaxParallel2>
<MpElse1>1</MpElse1>
<MpElse2>0</MpElse2>
<TZ/>
</ATTR_JOBS>
<ATTR_UNIX state="1">
<OutputDb>1</OutputDb>
<OutputDbErr>0</OutputDbErr>
<OutputFile>0</OutputFile>
<ShellScript>1</ShellScript>
<Command>0</Command>
<Priority>0</Priority>
<Shell/>
<ShellOptions/>
<Com/>
</ATTR_UNIX>
<RUNTIME state="1">
<MaxRetCode>0</MaxRetCode>
<MrcExecute/>
<MrcElseE>0</MrcElseE>
<FcstStatus>0| </FcstStatus>
<Ert>78</Ert>
<ErtMethodDef>1</ErtMethodDef>
<ErtMethodFix>0</ErtMethodFix>
<ErtFix>0</ErtFix>
<ErtDynMethod>2|Average</ErtDynMethod>
<ErtMethodDyn>0</ErtMethodDyn>
<ErtCnt>0</ErtCnt>
<ErtCorr>0</ErtCorr>
<ErtIgn>0</ErtIgn>
<ErtIgnFlg>0</ErtIgnFlg>
<ErtMinCnt>0</ErtMinCnt>
<MrtMethodNone>1</MrtMethodNone>
<MrtMethodFix>0</MrtMethodFix>
<MrtFix>0</MrtFix>
<MrtMethodErt>0</MrtMethodErt>
<MrtErt>0</MrtErt>
<MrtMethodDate>0</MrtMethodDate>
<MrtDays>0</MrtDays>
<MrtTime>00:00</MrtTime>
<MrtTZ/>
<SrtMethodNone>1</SrtMethodNone>
<SrtMethodFix>0</SrtMethodFix>
<SrtFix>0</SrtFix>
<SrtMethodErt>0</SrtMethodErt>
<SrtErt>0</SrtErt>
<MrtCancel>0</MrtCancel>
<MrtExecute>0</MrtExecute>
<MrtExecuteObj/>
</RUNTIME>
<DYNVALUES state="1">
<dyntree>
<node content="1" id="VALUE" name="Variables" parent="" type="VALUE">
<VALUE state="1">
<Values/>
<Mode>0</Mode>
</VALUE>
</node>
</dyntree>
</DYNVALUES>
<ROLLBACK state="1" tidy="1">
<RollbackFlag>0</RollbackFlag>
<CBackupObj/>
<CRollbackObj/>
<FBackupPath/>
<FDeleteBefore>0</FDeleteBefore>
<FInclSubDirs>0</FInclSubDirs>
</ROLLBACK>
<PRE_SCRIPT mode="1" replacementmode="1" state="1" tidy="0">
<PSCRI><![CDATA[:INC PCK.AUTOMIC_SIEBEL.PRV.INCLUDE.GET_VALUES_FROM_CONFIG &PROMPTSET# = "PCK.AUTOMIC_SIEBEL.PRV.PROMPTSET.START"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.START_STOP_JOB_ACCORDING_TO_AGENT_OS]]></PSCRI>
</PRE_SCRIPT>
<SCRIPT mode="1" state="1" tidy="0">
<MSCRI><![CDATA[:DEFINE &STRING_ARR#, string, 30
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_HEADER_PARAM_VALIDATION

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Server Root Directory"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_SERVER_ROOT#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Gateway Server Address"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_GATEWAY_SERVER#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Server Administrator Username"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_USERNAME#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Enterprise Name"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_ENTRPR_SERVER#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Servers"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_SERVERS#

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel start timeout(s)"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_START_TIMEOUT#
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.SUDOERS_HEADER
errors=0

! Check if Siebel Server Root directory exists
:SET &UC4RB_CHECKME# = &UC4RB_SIEBEL_SERVER_ROOT#
:INCLUDE PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_UNIX_SHELL_FILE_EXISTS

if [ $ISDIR -eq 0 ]
then
:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Server Root Directory"
:SET &UC4RB_LOGGING_ERROR# = "&UC4RB_SIEBEL_SERVER_ROOT# is not a directory "
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_ERROR_PARAMETER
   errors=2
fi

:DEFINE &STRING_ARR#, string, 30
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.NORMALIZE_PATH "UC4RB_CONVERTED_STRING" = "UC4RB_SIEBEL_ENV_SCRIPT_DIR"
! Check if Unix environment script directory exist
:SET &UC4RB_CHECKME# = "&UC4RB_SIEBEL_ENV_SCRIPT_DIR#/&UC4RB_SIEBEL_ENV_SCRIPT#"
:INCLUDE PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_UNIX_SHELL_FILE_EXISTS
if [ $ISFILE -eq 0 ] ;
then
:  SET &UC4RB_LOGGING_PARAMETER# = "Unix environment script directory/Unix environment script file"
:  SET &UC4RB_LOGGING_ERROR# = "The env file doesn't exist"
:  INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_ERROR_PARAMETER
  errors=1
fi

if [ $errors -gt 0 ]
then
  exit $errors
fi


:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_HEADER_EXECUTION

cd "&UC4RB_SIEBEL_SERVER_ROOT#/bin"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_UNIX_SHELL

:SET &UC4RB_ENCRYPTED_PASSWORD_TMP#="&UC4RB_SIEBEL_PASSWORD#"
:INCLUDE PCK.AUTOMIC_SHARED.PUB.INCLUDE.DECRYPT_PASSWORD

:DEFINE &ARRAY#, string, 20
:FILL &ARRAY#[] = STR_SPLIT(&UC4RB_SIEBEL_SERVERS#, ",")
:SET &LEN# = LENGTH(&ARRAY#[], SIZE)

! Call env script
echo "Call env script &UC4RB_SIEBEL_ENV_SCRIPT_DIR#/&UC4RB_SIEBEL_ENV_SCRIPT#"
. "&UC4RB_SIEBEL_ENV_SCRIPT_DIR#/&UC4RB_SIEBEL_ENV_SCRIPT#"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_UNIX_SHELL

! Check if servers exist
:SET &VAR# = 1
:WHILE &VAR# LE &LEN#
:  SET &COMMAND# = 'srvrmgr /g "&UC4RB_SIEBEL_GATEWAY_SERVER#" /e "&UC4RB_SIEBEL_ENTRPR_SERVER#" '
:  SET &COMMAND# = STR_CAT(&COMMAND#, '/u "&UC4RB_SIEBEL_USERNAME#" /p "$UC4_DECRYPTED_PWD"')
echo INFO: Check if server &ARRAY#[&VAR#] exists ...
&COMMAND# /c "list server show SBLSRVR_NAME" | grep "^&ARRAY#[&VAR#] " > /dev/null
retcode=$?
if [ $retcode -ne 0 ]
  then
    &COMMAND# /c "list server show SBLSRVR_NAME"
    echo ERROR: Server &ARRAY#[&VAR#] does not exist or input values are incorrect. Aborting ...
    exit $retcode
fi
:  SET &VAR# = &VAR# + 1
:ENDWHILE

time=0
while [ $time -le "&UC4RB_SIEBEL_START_TIMEOUT#" ]
do
fail_count=0
:SET &VAR# = 1
:WHILE &VAR# LE &LEN#
:  SET &COMMAND# = 'srvrmgr /g "&UC4RB_SIEBEL_GATEWAY_SERVER#" /e "&UC4RB_SIEBEL_ENTRPR_SERVER#" '
:  SET &COMMAND# = STR_CAT(&COMMAND#, '/u "&UC4RB_SIEBEL_USERNAME#" /p "$UC4_DECRYPTED_PWD"')
   &COMMAND# /c "list server &ARRAY#[&VAR#] show SBLSRVR_STATE" | grep "^Running" > /dev/null
   ret=$?
   if [ $ret -ne 0 ]
   then
     fail_count=$(( fail_count + 1 ))
   fi
:  SET &VAR# = &VAR# + 1
:ENDWHILE
  if [ $fail_count -eq 0 ]
  then
    break;
  fi
  time=$(( $time + 5 ))
  sleep 5
done


if [ $time -gt "&UC4RB_SIEBEL_START_TIMEOUT#" ]
then
  echo INFO: Servers are not running after &UC4RB_SIEBEL_START_TIMEOUT# seconds
  exit 1
fi


echo INFO: All servers are in Running state.
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.SUDOERS_FOOTER
]]></MSCRI>
</SCRIPT>
<OUTPUTSCAN state="1">
<Inherit>N</Inherit>
<filterobjects/>
<HostFsc/>
<LoginFsc/>
</OUTPUTSCAN>
<POST_SCRIPT mode="1" replacementmode="1" state="1" tidy="1">
<OSCRI/>
</POST_SCRIPT>
<DOCU_Docu state="1" type="text">
<DOC/>
</DOCU_Docu>
</JOBS_UNIX>
</uc-export>