<?xml version="1.0" encoding="ISO-8859-15" standalone="no"?><uc-export clientvers="8.0.0">
<JOBS_WINDOWS AttrType="WINDOWS" name="PCK.AUTOMIC_SIEBEL.PRV.JOB.COPY_OTHERS@WINDOWS">
<XHEADER state="1">
<Title/>


<LastUsed/>
<ArchiveKey1/>
<ArchiveKey2/>
<ExtRepDef>1</ExtRepDef>
<ExtRepAll>0</ExtRepAll>
<ExtRepNone>0</ExtRepNone>
<Active>1</Active>
<OH_SubType/>
</XHEADER>
<OUTPUTREG state="1" tidy="1">
<FileReg/>
</OUTPUTREG>
<SYNCREF state="1">
<Syncs/>
</SYNCREF>
<ATTR_JOBS state="1">
<Queue>CLIENT_QUEUE</Queue>
<StartType/>
<HostDst>WINDOWS|&lt;WIN&gt;|HOST</HostDst>
<HostATTR_Type>WINDOWS</HostATTR_Type>
<CodeName/>
<Login/>
<IntAccount/>
<AutoDeactNo>1</AutoDeactNo>
<AutoDeact1ErrorFree>0</AutoDeact1ErrorFree>
<AutoDeactErrorFree>0</AutoDeactErrorFree>
<DeactWhen/>
<DeactDelay>0</DeactDelay>
<AutoDeactAlways>0</AutoDeactAlways>
<AttDialog>0</AttDialog>
<ActAtRun>1</ActAtRun>
<Consumption>0</Consumption>
<UC4Priority>0</UC4Priority>
<MaxParallel2>0</MaxParallel2>
<MpElse1>1</MpElse1>
<MpElse2>0</MpElse2>
<TZ/>
</ATTR_JOBS>
<ATTR_WINDOWS state="1">
<OutputDb>1</OutputDb>
<OutputDbErr>0</OutputDbErr>
<OutputFile>0</OutputFile>
<IsGenerated>0</IsGenerated>
<BAT>0</BAT>
<COM>0</COM>
<WinBatch>1</WinBatch>
<Standard>1</Standard>
<Minimized>0</Minimized>
<Maximized>0</Maximized>
<JObjDefault>0</JObjDefault>
<JObjYes>1</JObjYes>
<JObjNo>0</JObjNo>
<WorkingDirectory>c:\</WorkingDirectory>
<Command/>
<LogOn>0</LogOn>
<ShowJob>0</ShowJob>
</ATTR_WINDOWS>
<RUNTIME state="1">
<MaxRetCode>0</MaxRetCode>
<MrcExecute/>
<MrcElseE>0</MrcElseE>
<FcstStatus>0| </FcstStatus>
<Ert>33</Ert>
<ErtMethodDef>1</ErtMethodDef>
<ErtMethodFix>0</ErtMethodFix>
<ErtFix>0</ErtFix>
<ErtDynMethod>2|Average</ErtDynMethod>
<ErtMethodDyn>0</ErtMethodDyn>
<ErtCnt>0</ErtCnt>
<ErtCorr>0</ErtCorr>
<ErtIgn>0</ErtIgn>
<ErtIgnFlg>0</ErtIgnFlg>
<ErtMinCnt>0</ErtMinCnt>
<MrtMethodNone>1</MrtMethodNone>
<MrtMethodFix>0</MrtMethodFix>
<MrtFix>0</MrtFix>
<MrtMethodErt>0</MrtMethodErt>
<MrtErt>0</MrtErt>
<MrtMethodDate>0</MrtMethodDate>
<MrtDays>0</MrtDays>
<MrtTime>00:00</MrtTime>
<MrtTZ/>
<SrtMethodNone>1</SrtMethodNone>
<SrtMethodFix>0</SrtMethodFix>
<SrtFix>0</SrtFix>
<SrtMethodErt>0</SrtMethodErt>
<SrtErt>0</SrtErt>
<MrtCancel>0</MrtCancel>
<MrtExecute>0</MrtExecute>
<MrtExecuteObj/>
</RUNTIME>
<DYNVALUES state="1">
<dyntree>
<node content="1" id="VALUE" name="Variables" parent="" type="VALUE">
<VALUE state="1">
<Values/>
<Mode>0</Mode>
</VALUE>
</node>
</dyntree>
</DYNVALUES>
<ROLLBACK state="1" tidy="1">
<RollbackFlag>0</RollbackFlag>
<CBackupObj/>
<CRollbackObj/>
<FBackupPath/>
<FDeleteBefore>0</FDeleteBefore>
<FInclSubDirs>0</FInclSubDirs>
</ROLLBACK>
<PRE_SCRIPT mode="1" replacementmode="1" state="1" tidy="0">
<PSCRI><![CDATA[:SET &PROMPTSET# = "PCK.AUTOMIC_SIEBEL.PRV.PROMPTSET.COPY_FILES_TO_TARGET"
:INC PCK.AUTOMIC_SIEBEL.PRV.INCLUDE.GET_VALUES_FROM_CONFIG
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.START_STOP_JOB_ACCORDING_TO_AGENT_OS]]></PSCRI>
</PRE_SCRIPT>
<SCRIPT mode="1" state="1" tidy="0">
<MSCRI><![CDATA[:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.POWERSHELL_UTILITY
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_HEADER_PARAM_VALIDATION

:DEFINE &STRING_ARR#,string,30
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.NORMALIZE_PATH "UC4RB_CONVERTED_STRING" = "UC4RB_SIEBEL_SERVER_HOME_DIR"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.NORMALIZE_PATH "UC4RB_CONVERTED_STRING" = "UC4RB_SIEBEL_WS_PUB_DIR"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.NORMALIZE_PATH "UC4RB_CONVERTED_STRING" = "UC4RB_SIEBEL_EXTRACTED_DIR"

:SET &UC4RB_LOGGING_PARAMETER# = "Siebel Server Home Directory"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_SERVER_HOME_DIR#
:SET &UC4RB_LOGGING_PARAMETER# = "Siebel WebServer Public Directory"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_WS_PUB_DIR#
:SET &UC4RB_LOGGING_PARAMETER# = "Languages to use for the Import"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_LANGUAGES#
:SET &UC4RB_LOGGING_PARAMETER# = "Deployment Package Extracted Directory"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_SIEBEL_EXTRACTED_DIR#

! Start execution
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_HEADER_EXECUTION
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHANGE_FOLDER_TO_AGENT_BIN

$languages = "&UC4RB_SIEBEL_LANGUAGES#"
$sourceBase = "&UC4RB_SIEBEL_EXTRACTED_DIR#\collected_files\Client\PUBLIC"
$targetBase = "&UC4RB_SIEBEL_WS_PUB_DIR#"

! Copy Siebel Client Public files to Siebel WebServer Public Directory
:SET &UC4RB_LOGGING_INFO# = "Start copying Client PUBLIC files to &UC4RB_SIEBEL_WS_PUB_DIR#..."
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_INFO

$strLang = $languages.Split(",")
ForEach ($lang in $strLang) {
  $sourceDir = $sourceBase + "\" + $lang.Trim()
  $targetDir = $targetBase + "\" + $lang.Trim()
  if (Test-Path -Path "$sourceDir") {
    Write-Host "INFO: Copy file from $sourceDir to $targetDir."
    if (!(Test-Path -Path "$targetDir")) {
      New-Item -Path "$targetDir" -Force -ItemType directory
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_WINDOWS_POWERSHELL
    }
    Copy-Item "$sourceDir\*" -Destination "$targetDir" -Force -Recurse
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_WINDOWS_POWERSHELL
  }
}

:SET &UC4RB_LOGGING_INFO# = "Copy Client PUBLIC files successfully to &UC4RB_SIEBEL_WS_PUB_DIR#"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_INFO

$sourceArray = @()
$sourceBase = ""
$targetBase = "&UC4RB_SIEBEL_SERVER_HOME_DIR#"

ForEach ($path in (Get-ChildItem -Path "&UC4RB_SIEBEL_EXTRACTED_DIR#\collected_files")) {
  if (($path.Attributes -eq "Directory") -and ($path.Name -ne "Client")) {
    $sourceArray += $path.FullName
  }
}

ForEach ($path in $sourceArray) {
  ForEach ($item in (Get-ChildItem -Path "$path")) {
    if (($item.Attributes -eq "Directory") -and ($item.Name -eq "webmaster")) {
      $sourceBase = $path
      break
    }
  }
}

if ($sourceBase -eq "") {
  Write-Host "ERROR: Siebel Server <collected_files\siebsrvr> files not exist in Deployment Package"
  $errors=2
  exit $errors
}
! Copy Siebel Server files to Siebel Server
:SET &UC4RB_LOGGING_INFO# = "Start copying Siebel Server files to &UC4RB_SIEBEL_SERVER_HOME_DIR#..."
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_INFO

! Web Templates: <SiebelServer_HomeDir>\webtempl\*
$sourceDir = $sourceBase + "\webtempl"
$targetDir = $targetBase + "\webtempl"
if (Test-Path -Path "$sourceDir") {
  Write-Host "INFO: Copy file from $sourceDir to $targetDir."
  if (!(Test-Path -Path "$targetDir")) {
    New-Item -Path "$targetDir" -Force -ItemType directory
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_WINDOWS_POWERSHELL
  }
  Copy-Item "$sourceDir\*" -Destination "$targetDir" -Force -Recurse
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_WINDOWS_POWERSHELL
}

! Java Applets: <SiebelServer_HomeDir>\webmaster\siebel_build\applets\*
$sourceDir = $sourceBase + "\webmaster\siebel_build\applets"
$targetDir = $targetBase + "\webmaster\siebel_build\applets"
if (Test-Path -Path "$sourceDir") {
  Write-Host "INFO: Copy file from $sourceDir to $targetDir."
  if (!(Test-Path -Path "$targetDir")) {
    New-Item -Path "$targetDir" -Force -ItemType directory
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_WINDOWS_POWERSHELL
  }
  Copy-Item "$sourceDir\*" -Destination "$targetDir" -Force -Recurse
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_WINDOWS_POWERSHELL
}

! Java Scripts: <SiebelServer_HomeDir>\webmaster\siebel_build\scripts\*
$sourceDir = $sourceBase + "\webmaster\siebel_build\scripts"
$targetDir = $targetBase + "\webmaster\siebel_build\scripts"
if (Test-Path -Path "$sourceDir") {
  Write-Host "INFO: Copy file from $sourceDir to $targetDir."
  if (!(Test-Path -Path "$targetDir")) {
    New-Item -Path "$targetDir" -Force -ItemType directory
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_WINDOWS_POWERSHELL
  }
  Copy-Item "$sourceDir\*" -Destination "$targetDir" -Force -Recurse
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_WINDOWS_POWERSHELL
}

$strLang = $languages.Split(",")
ForEach ($lang in $strLang) {
! Images <SiebelServer_HomeDir>\webmaster\images\[language_3_letter_code]\*
  $sourceDir = $sourceBase + "\webmaster\images\" + $lang.Trim()
  $targetDir = $targetBase + "\webmaster\images\" + $lang.Trim()
  if (Test-Path -Path "$sourceDir") {
    Write-Host "INFO: Copy file from $sourceDir to $targetDir."
    if (!(Test-Path -Path "$targetDir")) {
      New-Item -Path "$targetDir" -Force -ItemType directory
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_WINDOWS_POWERSHELL
    }
    Copy-Item "$sourceDir\*" -Destination "$targetDir" -Force -Recurse
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_WINDOWS_POWERSHELL
  }

! CSS: <SiebelServer_HomeDir>\webmaster\files\[language_3_letter_code]\*
  $sourceDir = $sourceBase + "\webmaster\files\" + $lang.Trim()
  $targetDir = $targetBase + "\webmaster\files\" + $lang.Trim()
  if (Test-Path -Path "$sourceDir") {
    Write-Host "INFO: Copy file from $sourceDir to $targetDir."
    if (!(Test-Path -Path "$targetDir")) {
      New-Item -Path "$targetDir" -Force -ItemType directory
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_WINDOWS_POWERSHELL
    }
    Copy-Item "$sourceDir\*" -Destination "$targetDir" -Force -Recurse
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_RETURN_CODE_WINDOWS_POWERSHELL
  }
}

:SET &UC4RB_LOGGING_INFO# = "Copy Siebel Server files successfully to &UC4RB_SIEBEL_SERVER_HOME_DIR#"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_INFO
]]></MSCRI>
</SCRIPT>
<OUTPUTSCAN state="1">
<Inherit>N</Inherit>
<filterobjects/>
<HostFsc/>
<LoginFsc/>
</OUTPUTSCAN>
<POST_SCRIPT mode="1" replacementmode="1" state="1" tidy="1">
<OSCRI/>
</POST_SCRIPT>
<DOCU_Docu state="1" type="text">
<DOC/>
</DOCU_Docu>
</JOBS_WINDOWS>
</uc-export>